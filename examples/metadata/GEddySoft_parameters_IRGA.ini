[version]
procedure_version = 4.0
procedure_version_date = 2025-05-16

[files]
log_filepath = ..\examples\output
output_folder = ..\examples\output
# for sonic and tracer, multiple paths are possible, and sub-folders of the given folder(s) are also screened 
sonic_files_folders = (r'..\examples\data',)
tracer_files_folders = (r'',)
sonic_files_prefix = 
tracer_files_prefix = 
tracer_files_suffix = 
tracer_files_date_format = 

output_files_prefix = IRGA_BE-Lon_fluxes_
# if 'tracer_files_folders' is empty, the files path+name given here will be processed 
tracer_files = ()
# clock drift, if present and known. Leave as an empty string if no correction needed
lag_clock_drift_filepath = 
# in case LAG_DETECT_METHOD = PRESCRIBED, provide the file path and name. Otherwise, will not be used.
lag_prescribed_filepath = 
# in case LAG_RH_DEPENDENCY= True, provide the file path and name. Otherwise, will not be used. 
# rounded mz values in the file column, with 3 decimals, should be found in the data input file 
# for the parametrization to be applied
# in this case, meteo_file MUST be also provided (for RH) 
lag_rh_dependency_filepath = 
# in case TILT_CORRECTION_MODE = 2, provide the file path and name. Otherwise, will not be used.
tilt_correction_filepath = 
# meteo variables useful for improved computation of air density
meteo_filepath = ..\examples\metadata\input_meteo.csv
# In case LPFC ne 0, provide the file path and name for low-pass filtering correction parameters. Otherwise, will not be used.
lpfc_filepath = 
# (start date, end date), use format yyyy_mm_dd__hh_mm_ss, only those files starting with the given timestamp will be processed. Leave empty if no selection to be applied
date_files_selection = ('2023_07_07__00_00_00','2023_07_09__23_30_00')

[sonic]
# define file extension : 'hdf5' or 'ghg'
sonic_files_type = ghg
# define data column indices of time, u, v, w, T, flag;
#   for GHG files: (1,2,48,49,50,51,52), time being in two columns 
# 	for hdf5 files : (0,1,2,3,4,7)
sonic_columns = (1,2,48,49,50,51,52)

[irga]
# if sonic files contain IRGA data, define column indices here or set to () if not present
# column index of CO2, H2O, quality flag
irga_columns = (26, 28, 4)
irga_names = ('CO2 dry', 'H2O dry', 'quality flag')

[tracer]
# tracers to process: use 
#  - () to process ALL tracers
#  - (x,x,x,...) to process only those mentioned mz (e.g. (33.034,45.0335,59.049099,69.0699,137.1325)). 
#    The closest ion will be chosen, for each mz. 
#    You need to provide at least two mz, it will not work with only one.
tracer_mz = ()
# column names of mandatory data
time_column = time
conc_column = Signal
conc_prec_column = Signal_precision
conc_acc_column = Signal_accuracy
zero_prec_column = zero_precision
detected_masses_column = mz
calibration_column = calibration
transmission_column = transmission
Xr0_column = Xr0
cluster_min_column = cluster_min
cluster_max_column = cluster_max
k_reac_column = k_reac
FY_column = FY
IF_column = IF

[meteo]
# meteo data: define column indices. Will be used only if a meteo file is provided
# timestamp must be in column 0
# column index of pressure data (in hPa)
pressure_column = 1
# column index of air temperature data (in deg C)
temperature_column = 2
# column index of air relative humiditiy data (in %)
relative_humidity_column = 3

[param]
# processing parameters
# sonic orientation, for wind direction computation: in degrees North
SONIC_ORIENTATION = 340
# sonic type, for wind direction computation: R2Axis, R3Spar, R3Axis, HS50Spar, HS50Axis or CSAT3
SONIC_TYPE = HS50Spar
# sensor height, in meters above displacement height
SENSOR_HEIGHT = 1.4             
# lenght of an input file, in seconds
WINDOW_LENGTH = 1800             
# sonic anemometer sampling rate, per second (e.g. 50 if at 50 Hz)
SAMPLING_RATE_SONIC = 20
# tracer concentration sampling rate, per second (e.g. 10 if at 10 Hz)
SAMPLING_RATE_TRACER = 20
# final sampling rate (the two previous rates will be aligned to this final rate), per second (e.g. 10 if at 10 Hz)
SAMPLING_RATE_FINAL = 20
# if 1, linear detrending is applied to temperature signal
DETREND_TEMPERATURE_SIGNAL = 0
# if 1, linear detrending is applied to tracer signals
DETREND_TRACER_SIGNAL = 0

# time-lag detection method to be applied; choose between: CONST, MAX, MAX_WITH_DEFAULT or PRESCRIBED
# If CONST, then the center of the [LAG_SEARCH_MIN,LAG_SEARCH_MAX] will be used
# If PRESCRIBED, the lag for each half-hour will be taken from the provided file (corresponding file path and name must be given in the "files" section)
# 	In case no lag is available for the running HH, the median of the 10 closest non-NaN lag values will be used
# If MAX, the extremum of the lag function (smoothed according to LAG_COVPEAK_FILTER_LENGTH parameter)
#   will be search for, in the lag window [LAG_EXPECTED - LAG_INNER_WINDOW_SIZE, LAG_EXPECTED + LAG_INNER_WINDOW_SIZE].
# If MAX_WITH_DEFAULT, the same search than MAX will be performed, but if an extremum of the covariance is not found inside #	the window (but at one of its extremes), the time lag is set to LAG_EXPECTED.
LAG_DETECT_METHOD = MAX_WITH_DEFAULT
# expected physical lag (not including possible clock drift, in samples of sampling_rate_final)
LAG_WINDOW_CENTER = -5
# time lag plotting window around the expected lag (in samples of sampling_rate_final)
# ex: if = 100, the plotting window will be [LAG_EXPECTED-100, LAG_EXPECTED+100]
LAG_OUTER_WINDOW_SIZE = 100
# time lag search window around the expected lag (in samples of sampling_rate_final)
# ex: if = 20, the search window will be [LAG_EXPECTED-20, LAG_EXPECTED+20]
LAG_INNER_WINDOW_SIZE = 20
# smoothing length of filter applied prior to finding covariance peak, in samples of sampling_rate_final
LAG_COVPEAK_FILTER_LENGTH = 2
# imposed time-lag, overruling, for provided mz, the MAX/MAX_WITH_DEFAULT window center or the PRESCRIBED lag (1 if applied, 0 if not)
# (corresponding file path and name must be given in the "files" section)
LAG_RH_DEPENDENCY = 0

# number of logarithmically spaced frequency bins for cospectra
NUM_FREQ_BINS = 50
# tilt correction: 0 for no tilt correction, 1 for double rotation, 2 for directional planar fit
TILT_CORRECTION_MODE = 1
# if 1, Webb-Pearman-Leuning correction is applied (not tested yet)
APPLY_WPL_CORRECTION = 0
# threshold value for completeness of input data (0.0 - 1.0)
COMPLETENESS_THRESHOLD = 0.9
# fixed pressure used if no pressure is given in the input files, in hPa / mbar 
DEFAULT_PRESSURE = 1000

# 0 = no spikes handling, 1 = spike detection, 2 = spikes detection and replacement with linear interpolation
SPIKE_MODE = 2
# plausibility range (mean+n*sigma, where you set n)
# suggested 5 for w and 3.5 for T, IRGA and TRACER?
SPIKE_DETECTION_THRESHOLD_W = 5
SPIKE_DETECTION_THRESHOLD_T = 3.5
SPIKE_DETECTION_THRESHOLD_IRGA = 3.5
SPIKE_DETECTION_THRESHOLD_TRACER = 5
# maximum number of consecutive outliers that can be considered as spikes
MAX_CONSEC_SPIKES = 3

# low-pass filtering correction on fluxes (0 = no correction, 1 = cut-off frequency + Massman as reference co-spectra, 2 = wind-speed dependent correction factor)
LPFC = 0

# measurement identification, free string that will be simply transfered in the output
MEAS_ID = BE-Lon
# station latitude, to be used in the ITC_w test (in degrees)
LATITUDE = 50.

[run_param]
# Choice of cconcentration files to be processed (0 for GHG, called IRGA, 1 for VOCs, called TRACER)
CONCENTRATION_TYPE = 0
# run in multiprocessing mode, one process per day of data (0 for conventionnal processing and 1 for multiprocessing)
# option available only for tracer data
MULTIPROCESSING = 0
# Process only sonic files having a corresponding tracer file (0 if this filtering is not applied, 1 if it is applied) 
MAP_SONIC2TRACER = 1
# IPT quality test (test on instrument malfunctions from Vitale 2020) is very slow.
# Its grounding for tracers will speed up the run by 2.5 (3.8) for calibrated (all)
PROCESS_IPT_TRACERS = 1
# output/plotting parameters: 1 for writing/plotting, otherwise 0 
WRITE_COV_OUTPUTS = 0
PLOT_FIND_COVARIANCE_PEAK = 0
PLOT_SPIKE_DETECTION = 0
PLOT_COSPECTRUM = 0 
PLOT_INST_PROB_TEST = 0
PLOT_CORRECTION_FACTOR_LPF=0
